/*
 * OCCAM
 *
 * Copyright (c) 2011-2012, SRI International
 *
 *  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of SRI International nor the names of its contributors may
 *   be used to endorse or promote products derived from this software without
 *   specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

syntax = "proto2";

package previrt.watch.proto;

import "Previrt.proto" ;


message PrimExpr {
  optional int32 var = 1 ;
  optional int32 match = 2 ;
  optional previrt.proto.PrevirtType lit = 3 ;
  optional bytes str = 4 ;
}

message PrimExprs {
  optional PrimExpr one  = 1 ;
  optional group Args = 10 {
  	optional int32 start = 11 [default=0] ;
  	optional int32 end   = 12 [default=-1] ; 
  }
}

message ActionTree {
  optional group If = 10 {
  	required int32 var = 11 ;
    required previrt.proto.PrevirtType test = 12 ;
    
    required ActionTree _then = 18 ;
    optional ActionTree _else = 19 ;
  }
  optional group Forward = 20 {
    optional PrimExprs args = 21 ;    
  }
  optional group Call = 30 {
    repeated PrimExpr target = 31 ;
    repeated PrimExprs args = 32 ;
    optional bool tail = 33 [default=false] ;
  }
  optional group Return = 40 {
    optional PrimExpr value = 41 ;
    optional bool undef = 42 [default=false] ;
  }
  optional group Fail = 50 {
  }
  repeated ActionTree Seq = 60 ;
}

message PatternExpr {
  optional string module_name = 1 ;
  optional string function_name = 2 ;
  
  repeated string exclude = 3 ;
  
  repeated group Predicates = 10 {
  }
}

message WatchInterface {
  repeated group Hooks = 1 {
    required PatternExpr pattern = 2 ;
    required ActionTree action = 3 ;
  }
}
